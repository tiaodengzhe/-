#先从一张图片里面分割出52张扑克牌
#生成一幅扑克牌编号：spades diamonds clubs hearts，2-10 JQKA
#随机抽取15张扑克牌，进行排序显示出来

from random import choice
import matplotlib.pyplot as plt
from PIL import Image
import collections

Card = collections.namedtuple('Card', ['rank', 'suit'])

class FrenchDeck:
    #生成扑克牌编号2-10 + JQKA
    ranks = [str(n) for n in range(2, 11)] + list('JQKA')
    #黑桃，方块，梅花，红心
    suits = 'spades diamonds clubs hearts'.split()
    
    #生成扑克牌
    def __init__(self):
        self._cards = [Card(rank, suit) for suit in self.suits
                                        for rank in self.ranks]
    #扑克牌总张数
    def __len__(self):
        return len(self._cards)
    #让对象实现迭代功能
    def __getitem__(self, position):
        return self._cards[position]
        

def spades_high(card):
    """对扑克牌进行排序"""
    rank_value = FrenchDeck.ranks.index(card.rank)
    #扑克牌在该花色的编号(2-A对应:0-13)*4+扑克牌花色的值
    #例如黑桃2，0*4+3=3，因而黑桃2前面还有方块2，梅花2和红桃2三张牌
    return rank_value * len(suit_values) + int(suit_values[card.suit])
    
def draw(deck, _address):
    """随机抽取15张牌，从小到大排成3行5列"""
    cards = []
    num = 15
    for i in range(num):
        card = choice(deck)
        cards.append(card)
        
    j = 0
    for card in sorted(cards, key=spades_high):
        address = (_address+'/%s%s.png'%(card[1], card[0]))
        title = card[1]+card[0]
        img = Image.open(address)
        plt.subplot(3,5,j+1)
        plt.imshow(img)
        plt.title(title,fontsize=8)
        plt.xticks([])
        plt.yticks([])
        j+=1
    plt.show()

if __name__ == '__main__':
    #定义一个花色分值的字典
    suit_values = dict(spades=3, hearts=2, clubs=1, diamonds=0)
    #生成一幅扑克牌
    deck = FrenchDeck()
    #指定到已经分割好的，52张单独扑克牌的文件地址
    _address = ('E:/WXGZH/第五篇：扑克牌分发')
    #抽牌、排序和显示出来
    draw(deck, _address)
